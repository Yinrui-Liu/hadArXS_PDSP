from hadana.packages import *
import hadana.parameters as parameters

beamPDG = 211
# copy arrays from the output uncertainty of dataXS_sys.py
if beamPDG == 211:
    true_bins = parameters.true_bins_pionp
    stat = np.array([0, 50.22159081057461, 36.98440038481947, 31.353026520826294, 27.416095185196266, 28.427746080954904, 31.63955592257153, 45.26326078149151, 76.98681474921509, 0])
    stat_sq = stat*stat

    sys_bkg = np.array([0, 89.24302216504485, 57.02564086401882, 49.190397245768246, 42.45442692817702, 46.88632198303023, 52.634263578764234, 71.63390137644872, 113.08605105812556, 0])
    sys_bkg = np.sqrt(sys_bkg*sys_bkg - stat_sq)

    sys_MCstat = np.array([0, 61.48661192160575, 51.06423579322279, 37.565749047567536, 28.63969568891139, 35.72283863293699, 43.98588460289036, 95.45541706209987, 174.1401562355844, 0])
    
    sys_MCXS = np.array([0, 37.43524541141344, 15.082152868682298, 19.34166895719167, 11.352841714049722, 4.965704130727196, 7.913743313937945, 2.8595115402281457, 14.206368372205496, 0])

    sys_reweiP = np.array([0, 11.221518805687156, 5.209402936179087, 2.904529011119135, 2.0617745016541336, 3.5950696237481434, 7.742042293958931, 6.162708942294144, 20.486030611985186, 0])

    sys_Eloss = np.array([0, 22.894540280590363, 20.53762292395896, 7.200693360492374, 13.157065216763849, 26.397062742481385, 14.155196907539358, 37.607445589528396, 80.63194926048061, 0])

elif beamPDG == 2212:
    true_bins = parameters.true_bins_proton
    stat = np.array([0, 119.24530642499873, 112.15100426371292, 52.18352757281957, 45.800828783197694, 33.61921127345375, 27.439007249606192, 27.164857444625373, 39.11655006609736, 98.45045599668674, 321.16348127629294, 0])
    stat_sq = stat*stat

    sys_bkg = np.array([0, 122.49690266108942, 119.53159403914195, 53.592599567783274, 48.221644962344826, 35.10046719005143, 28.899797602390827, 29.002209258496457, 41.41245696674604, 105.63544245174221, 321.60055693225377, 0])
    sys_bkg = np.sqrt(sys_bkg*sys_bkg - stat_sq)

    sys_MCstat = np.array([0, 379.2646420467045, 236.59009866695482, 104.88301187608405, 67.43388843510093, 44.01126803580537, 37.113291249369446, 38.37860125778105, 61.185309546507035, 173.07590077494837, 562.406837070262, 0])
    
    sys_MCXS = np.array([0, 140.21901840818396, 177.16493155648405, 89.41119518170214, 50.61426046530277, 43.35009502776773, 30.456442029138326, 21.510585855775894, 33.79705747744477, 45.7458687614892, 11.046953262948552, 0])

    sys_reweiP = np.array([0, 6.891999489678108, 32.28935173934677, 8.088853273242114, 6.074500481739215, 8.078151534216298, 2.6641685088009157, 2.881759596554479, 3.0561666925919213, 15.280015742063446, 16.044103061188935, 0])

    sys_Eloss = np.array([0, 13.790835249587168, 57.031532467449686, 20.402831302924156, 11.229635599151258, 11.013872720437318, 6.5343587485575, 8.250945116210378, 9.296407332487092, 98.17639597519852, 24.30134159149458, 0])


xrange = np.concatenate([[true_bins[1]], true_bins[1:-1]])[::-1]
print(xrange, stat, sys_bkg, sep='\n')
plt.step(xrange, stat, label="Statisical")
plt.bar((xrange[1:]+xrange[:-1])/2, stat[1:], width=xrange[1:]-xrange[:-1], color='skyblue', alpha=0.5)
plt.step(xrange, sys_bkg, label="Systematic: background")
plt.step(xrange, sys_MCstat, label="Systematic: MC statistics")
plt.step(xrange, sys_MCXS, label="Systematic: cross-section model")
plt.step(xrange, sys_reweiP, label="Systematic: momentum reweighting")
plt.step(xrange, sys_Eloss, label="Systematic: upstream energy loss")
plt.xlabel("Kinetic energy [MeV]")
plt.ylabel("Uncertainty on cross section [mb]")
plt.ylim([0, None])
plt.legend()
plt.savefig(f'plots/uncertainties_{beamPDG}.pdf')
plt.show()