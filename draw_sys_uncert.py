from hadana.packages import *
import hadana.parameters as parameters

beamPDG = 211
# copy arrays from the output uncertainty of dataXS_sys.py
if beamPDG == 211:
    true_bins = parameters.true_bins_pionp
    stat = np.array([0, 53.79242140459289, 37.515178745934534, 32.847729154164014, 28.2301810564192, 28.847691147688263, 32.26684718532956, 50.86867627063229, 72.39239344447643, 0])
    stat_sq = stat*stat

    sys_bkg = np.array([0, 68.20973980889306, 45.64345089206145, 39.47651689190951, 33.50918510248821, 35.08001879138706, 39.93626492674378, 63.82760351912472, 86.5640130700143, 0])
    sys_bkg = np.sqrt(sys_bkg*sys_bkg - stat_sq)

    sys_MCstat = np.array([0, 68.58028166258286, 40.22180332079438, 37.09279880925566, 30.09760484957535, 30.167859454183127, 34.975157299922685, 69.61678569884862, 114.05641980509499, 0])
    
    sys_MCXS = np.array([0, 37.43524541141344, 15.082152868682298, 19.34166895719167, 11.352841714049722, 4.965704130727196, 7.913743313937945, 2.8595115402281457, 14.206368372205496, 0])

    sys_reweiP = np.array([0, 11.221518805687156, 5.209402936179087, 2.904529011119135, 2.0617745016541336, 3.5950696237481434, 7.742042293958931, 6.162708942294144, 20.486030611985186, 0])

    sys_Eloss = np.array([0, 22.894540280590363, 20.53762292395896, 7.200693360492374, 13.157065216763849, 26.397062742481385, 14.155196907539358, 37.607445589528396, 80.63194926048061, 0])

    sys_SCE = np.array([0, 19.899637548224746, 9.831537758922877, 19.289352459702855, 16.218207745826703, 36.30653231021586, 3.8789110001945346, 38.822604035627364, 11.29462574327863, 0])

elif beamPDG == 2212:
    true_bins = parameters.true_bins_proton
    stat = np.array([0, 119.24530642499873, 112.15100426371292, 52.18352757281957, 45.800828783197694, 33.61921127345375, 27.439007249606192, 27.164857444625373, 39.11655006609736, 98.45045599668674, 321.16348127629294, 0])
    stat_sq = stat*stat

    sys_bkg = np.array([0, 123.76510566107466, 143.23872497122406, 38.92410896447849, 48.17318656351251, 32.67882756817434, 28.440883596643925, 28.9661267562788, 42.7032878623663, 132.1916353736344, 323.1007463628412, 0])
    sys_bkg = np.sqrt(sys_bkg*sys_bkg - stat_sq)

    sys_MCstat = np.array([0, 338.6539407429056, 229.85711488481306, 59.87361796100941, 46.46976736620766, 31.385128924128992, 25.569100405128324, 25.249424954514744, 48.612656100843665, 172.94583701888962, 263.3768724103049, 0])
    
    sys_MCXS = np.array([0, 140.21901840818396, 177.16493155648405, 89.41119518170214, 50.61426046530277, 43.35009502776773, 30.456442029138326, 21.510585855775894, 33.79705747744477, 45.7458687614892, 11.046953262948552, 0])

    sys_reweiP = np.array([0, 6.891999489678108, 32.28935173934677, 8.088853273242114, 6.074500481739215, 8.078151534216298, 2.6641685088009157, 2.881759596554479, 3.0561666925919213, 15.280015742063446, 16.044103061188935, 0])

    sys_Eloss = np.array([0, 13.790835249587168, 57.031532467449686, 20.402831302924156, 11.229635599151258, 11.013872720437318, 6.5343587485575, 8.250945116210378, 9.296407332487092, 98.17639597519852, 24.30134159149458, 0])

    sys_SCE = np.array([0, 258.1286850269041, 114.07328617963128, 29.720813780313733, 140.4832074975052, 97.29055798039781, 37.455027518371026, 7.939756969605185, 32.01476549570259, 52.415278322147515, 123.042696276497, 0])


xrange = np.concatenate([[true_bins[1]], true_bins[1:-1]])[::-1]
print(xrange, stat, sys_bkg, sep='\n')
plt.step(xrange, stat, label="Statisical")
plt.bar((xrange[1:]+xrange[:-1])/2, stat[1:], width=xrange[1:]-xrange[:-1], color='skyblue', alpha=0.5)
plt.step(xrange, sys_bkg, label="Systematic: background")
plt.step(xrange, sys_MCstat, label="Systematic: MC statistics")
plt.step(xrange, sys_MCXS, label="Systematic: cross-section model")
plt.step(xrange, sys_reweiP, label="Systematic: momentum reweighting")
plt.step(xrange, sys_Eloss, label="Systematic: upstream energy loss")
plt.step(xrange, sys_SCE, label="Systematic: space-charge correction")
plt.xlabel("Kinetic energy [MeV]")
plt.ylabel("Uncertainty on cross section [mb]")
plt.ylim([0, None])
plt.legend()
plt.savefig(f'plots/uncertainties_{beamPDG}.pdf')
plt.show()